{
  "version": 3,
  "sources": ["Project/Scripts/General/general.ts"],
  "sourcesContent": ["// @ts-nocheck\r\n\r\nconst dc = document,\r\n    wn = window;\r\n\r\nconst gebi = (id, DOM = dc) => DOM.getElementById(id);\r\n\r\nconst gebc = (className, n = false, DOM = dc): HTMLElement[] => {\r\n    let els = Array.from(DOM.getElementsByClassName(className));\r\n    if (n !== false) return els.at(n);\r\n    return els;\r\n};\r\n\r\nconst gebt = (tagName, n = false, DOM = dc) => {\r\n    let els = Array.from(DOM.getElementsByTagName(tagName));\r\n    if (n !== false) return els.at(n);\r\n    return els;\r\n};\r\n\r\nconst gebq = (query, n = false, DOM = dc) => {\r\n    // console.log(query, n, DOM);\r\n    let els = Array.from(DOM.querySelectorAll(query));\r\n    if (n !== false) return els.at(n);\r\n    return els;\r\n};\r\n\r\nconst gebqs = (query, DOM = dc) => DOM.querySelector(query);\r\n\r\nconst cons = console.log;\r\n\r\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst onlyFloat2Int = (n, mul = 1000000000000000) => {\r\n    let nt = parseInt(n);\r\n    return Math.floor((n - nt) * mul) + nt;\r\n};\r\n\r\nconst dtStamp = (typ = 0) => {\r\n    if (typ === 0) return new Date().toGMTString().split(\" GMT\")[0];\r\n    return new Date();\r\n};\r\n\r\nconst eventPresent = (type, func, domEle = dc) =>\r\n    getEventListeners(domEle)\r\n        [type].map((x) => x.listener)\r\n        .includes(func);\r\n\r\nconst setEvent = (type, func, domEle: HTMLElement = dc, stopPropagation = false, optns = { passive: true }) => {\r\n    try {\r\n        if (!eventPresent(type, func, domEle)) {\r\n            if (stopPropagation) {\r\n                const custEvent = (event) => {\r\n                    func(event);\r\n                    event.stopPropagation();\r\n                };\r\n                return domEle.addEventListener(type, custEvent, optns);\r\n            } else return domEle.addEventListener(type, func, optns);\r\n        }\r\n    } catch (e) {\r\n        return domEle.addEventListener(type, func, optns);\r\n    }\r\n};\r\n\r\n// var exports = {};\r\n// var require = (a) => {};\r\n\r\n//const arr2str = (arr) => (Array.isArray(arr) ? arr.map(arr2str).join(\":\") : String(arr)); moved to data.js\r\n//module.exports = { sleep: sleep, cons: cons };\r\nexport { dc, wn, gebi, gebc, gebt, gebq, gebqs, onlyFloat2Int, dtStamp, eventPresent, setEvent, cons, sleep };\r\n"],
  "mappings": "+jBAEA,IAAMA,EAAK,SAGX,IAAMC,EAAO,CAACC,EAAIC,EAAMC,IAAOD,EAAI,eAAeD,CAAE,EAqCpD,IAAMG,EAAe,CAACC,EAAMC,EAAMC,EAASC,IACvC,kBAAkBD,CAAM,EACnBF,CAAI,EAAE,IAAKI,GAAMA,EAAE,QAAQ,EAC3B,SAASH,CAAI,EAEhBI,EAAW,CAACL,EAAMC,EAAMC,EAAsBC,EAAIG,EAAkB,GAAOC,EAAQ,CAAE,QAAS,EAAK,IAAM,CAC3G,GAAI,CACA,GAAI,CAACR,EAAaC,EAAMC,EAAMC,CAAM,EAChC,GAAII,EAAiB,CACjB,IAAME,EAAaC,GAAU,CACzBR,EAAKQ,CAAK,EACVA,EAAM,gBAAgB,CAC1B,EACA,OAAOP,EAAO,iBAAiBF,EAAMQ,EAAWD,CAAK,MAClD,QAAOL,EAAO,iBAAiBF,EAAMC,EAAMM,CAAK,CAE/D,MAAE,CACE,OAAOL,EAAO,iBAAiBF,EAAMC,EAAMM,CAAK,CACpD,CACJ",
  "names": ["dc", "gebi", "id", "DOM", "dc", "eventPresent", "type", "func", "domEle", "dc", "x", "setEvent", "stopPropagation", "optns", "custEvent", "event"]
}
